<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Sid T</title>
    <link>/tech/</link>
    <description>Recent content in Tech on Sid T</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A brief history of init systems</title>
      <link>/tech/init/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/tech/init/</guid>
      <description>Recently I had the chance to give a talk at the Razorpay office as a part of FOSS United Bangalore&amp;rsquo;s meetup. This was a full length talk and I had a great time talking to like minded people about this.
This itself is a pretty niche topic, but a lot of people aren&amp;rsquo;t really aware of the system-d feud, so I decided why not give a talk on it? The material I used for the talk is below.</description>
    </item>
    
    <item>
      <title>Creating a CRUD API with Go and MongoDB</title>
      <link>/tech/mongocrud/</link>
      <pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/tech/mongocrud/</guid>
      <description>Setup A CRUD API or a Create-Read-Update-Delete API is one of the first steps you take in your journey exploring the world of backend development.
Get started with Golang by installing it on your computer if you havenâ€™t already done so.
This tutorial will require some basic knowledge of golang.
Next we will install the packages needed for creating the CRUD API. We&amp;rsquo;ll be using Gin Gonic to route the API endpoints.</description>
    </item>
    
  </channel>
</rss>
